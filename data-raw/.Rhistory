fisher.test(fisher_tbl)
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Penitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
fisher_tbl
df_marker_death
df_arm
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Panitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "FOLFOX alone") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 3, byrow = FALSE)
fisher.test(fisher_tbl)
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Panitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
fisher.test(fisher_tbl)
fisher_tbl
df_marker_death
marker_death_table
fisher_tbl
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Panitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
df_marker_death
df_biomark_kras
trial_path = file.path("2023-09-11/PDS_DSA_20050203")
library(dplyr)
library(haven)
library(purrr)
setwd("~/Documents/BIS 620/")
trial_path = file.path("2023-09-11/PDS_DSA_20050203")
trial_files = list.files(trial_path, pattern = "*_pds2019.sas7bdat")
dl = map(file.path(trial_path, trial_files), ~ read_sas(.x))
names(dl) = gsub("*_pds2019.sas7bdat", "", trial_files)
df_biomark_kras |> group_by(Type) |> summarize(n = n())
df_biomark_kras |> group_by(type) |> summarize(n = n())
View(df_marker_death)
df_marker_death
marker_death_table
df_marker_death
sum(df_marker_death[df_marker_death$DTH == 1,])
df_marker_death[df_marker_death$DTH == 1,]
df_marker_death[(df_marker_death$DTH == 1) & (df_marker_death$type == "Mutant"),]
df_marker_death[(df_marker_death$DTH == 1) & (df_marker_death$type == "Mutant") & (df_marker_death$arm == "Panitumumab + FOLFOX"),]
View(marker_death_table)
df_marker_death[(df_marker_death$DTH == 1) & (df_marker_death$type == "Mutant") & (df_marker_death$arm == "Panitumumab + FOLFOX"),]
df_biomark_kras
library(dplyr)
library(haven)
library(purrr)
setwd("~/Documents/BIS 620/")
trial_path = file.path("2023-09-11/PDS_DSA_20050203")
trial_files = list.files(trial_path, pattern = "*_pds2019.sas7bdat")
dl = map(file.path(trial_path, trial_files), ~ read_sas(.x))
names(dl) = gsub("*_pds2019.sas7bdat", "", trial_files)
library(dplyr)
library(haven)
library(purrr)
setwd("~/Documents/BIS 620/")
trial_path = file.path("2023-09-11/PDS_DSA_20050203")
trial_files = list.files(trial_path, pattern = "*_pds2019.sas7bdat")
dl = map(file.path(trial_path, trial_files), ~ read_sas(.x))
names(dl) = gsub("*_pds2019.sas7bdat", "", trial_files)
df_adae_grade_four <- dl$adae |> as_tibble() |> filter(AESEVCD == 4)
n_record <- df_adae_grade_four |> summarize(n = n())
print(paste("The number of records with grade 4 toxicities is", n_record))
n_subject <- df_adae_grade_four |> group_by(SUBJID) |> summarize() |> summarize(n = n())
print(paste("The number of people having grade 4 toxicity record is", n_subject))
df_adsl_partial <- dl$adsl |> select(SUBJID, TRT, AGE, SEX)
# Check for the uniqueness of SUBJID
n_unique <- df_adsl_partial |> summarize(n_unique = n_distinct(SUBJID))
n_subject <- df_adsl_partial |> summarize(n = n())
if (n_unique == n_subject) {print("There is no duplicate in SUBJID.")} else {print("There are duplicates in SUBJID.")}
# Merge the adae and adsl data source
df_adae_grade_four_adsl <- df_adae_grade_four |> select(SUBJID) |> group_by(SUBJID) |> summarize() |> left_join(df_adsl_partial, by = c("SUBJID"))
df_adae_grade_four_adsl
library(ggplot2)
# Histogram of ages
p1 = ggplot(df_adae_grade_four_adsl, aes(x = AGE)) + geom_histogram() + theme_bw() + labs(x = "Age", y = "Count") + ggtitle("Histogram of Age of subjects with grade 4 toxicity")
p1
avg_age <- dl$adsl |> select(AGE) |> summarize(avg_age = mean(AGE))
print(paste("The average age of subjects in the trials is", avg_age))
# Histogram of gender
p2 = ggplot(df_adae_grade_four_adsl, aes(x = SEX)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Gender", y = "Count") + ggtitle("Histogram of gender of subjects with grade 4 toxicity")
p2
# Histogram of TRT
p3 = ggplot(df_adae_grade_four_adsl, aes(x = TRT)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Treatment", y = "Count") + ggtitle("Histogram of treatment of subjects with grade 4 toxicity")
p3
# Drop those rows with NULL or unable-to-evaluate on RSREP and negative value on VISITDY
df_adrsp_partial <- dl$adrsp |> select(SUBJID, RSRESP, VISITDY) |> filter(RSRESP != "" & RSRESP != "Unable to evaluate" & VISITDY >= 0)
# Define order of the response
custom_order <- c("Progressive disease", "Stable disease", "Partial response", "Complete response")
df_adrsp_partial <- df_adrsp_partial |> mutate(rsresp_ordered = factor(RSRESP, levels = custom_order, ordered = TRUE))
df_best_rsp <- df_adrsp_partial |> group_by(SUBJID) |> summarize(best_rsresp = max(rsresp_ordered))
df_arm <- dl$adsl |> select(SUBJID, TRT) |> rename(arm = TRT)
df_best_rsp <- df_best_rsp |> left_join(df_arm |> select(SUBJID, arm), by = "SUBJID")
p4 <- ggplot(df_best_rsp, aes(x = best_rsresp, fill = arm)) + geom_histogram(stat = "count", position = "stack") + theme_bw() + labs(x = "Best Response", y = "Count", fill = "Treatment") + ggtitle("Histogram of Best Response facted by Treatment") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p4
# Note that if a patient has recorded values of "Complete Response" or "Partial Response", he or she will have best_response = Complete Response or Partial Response
df_best_rsp <- df_best_rsp |> mutate(is_positive = (best_rsresp >= "Partial response"))
df_best_rsp_positive_count <- df_best_rsp |> group_by(arm) |> summarize(n_positive = sum(is_positive))
df_best_rsp_positive_count
n_confirmed <- dl$adrsp |> select(SUBJID, RSRESP, RSCONFYN) |> filter(RSRESP == "Complete response" & RSCONFYN == "Y") |> summarize(n = n())
n_confirmed
df_biomark_kras <- dl$biomark |> select(SUBJID, BMMTNM1, BMMTR1, BMMTNM2, BMMTR2, BMMTNM3, BMMTR3, BMMTNM15, BMMTR15)
df_biomark_kras <- df_biomark_kras |> mutate(is_mutant = (BMMTR1 == "Mutant") | (BMMTR2 == "Mutant") | (BMMTR3 == "Mutant") | (BMMTR15 == "Mutant"))
df_biomark_kras <- df_biomark_kras |> mutate(n_wild = (BMMTR1 == "Wild-type") + (BMMTR2 == "Wild-type") + (BMMTR3 == "Wild-type") + (BMMTR15 == "Wild-type"))
df_biomark_kras <- df_biomark_kras |> mutate(n_unknown = (BMMTR1 == "Unknown" | BMMTR1 == "" | BMMTR1 == "Failure") + (BMMTR2 == "Unknown" | BMMTR2 == "" | BMMTR2 == "Failure") + (BMMTR3 == "Unknown" | BMMTR3 == "" | BMMTR3 == "Failure") + (BMMTR15 == "Unknown" | BMMTR15 == "" | BMMTR15 == "Failure"))
df_biomark_kras$type = NA
df_biomark_kras[df_biomark_kras$is_mutant, "type"] = "Mutant"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild > df_biomark_kras$n_unknown), "type"] = "Wild-type"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild <= df_biomark_kras$n_unknown), "type"] = "Unknown"
p5 <- ggplot(df_biomark_kras, aes(x = type)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Type", y = "Count") + ggtitle("Count of each KRAS type over all patients")
p5
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "FOLFOX alone") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 3, byrow = FALSE)
fisher.test(fisher_tbl)
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Panitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
df_marker_death
df_biomark_kras
df_biomark_kraS
df_biomark_kras
marker_death_table
View(df_biomark_kras)
df_biomark_kras |> filter(type == "Mutant")
df_biomark_kras |> filter((type == "Mutant") & (DTH == 1))
df_biomark_kras |> filter((type == "Mutant") && (DTH == 1))
df_biomark_kras |> filter((type == "Mutant") and (DTH == 1))
df_marker_death |> filter(type == "Mutant") |> filter(DTH == 1)
df_marker_death |> filter(type == "Mutant") |> filter(DTH == 0)
df_marker_death |> filter(type == "Mutant") |> filter(DTH == 0) |> datatable()
library(DT)
df_marker_death |> filter(type == "Mutant") |> filter(DTH == 0) |> datatable()
df_arm
df_arm |> filter(SUBJID == "000202")
library(dplyr)
library(haven)
library(purrr)
setwd("~/Documents/BIS 620/")
trial_path = file.path("2023-09-11/PDS_DSA_20050203")
trial_files = list.files(trial_path, pattern = "*_pds2019.sas7bdat")
dl = map(file.path(trial_path, trial_files), ~ read_sas(.x))
names(dl) = gsub("*_pds2019.sas7bdat", "", trial_files)
df_adae_grade_four <- dl$adae |> as_tibble() |> filter(AESEVCD == 4)
n_record <- df_adae_grade_four |> summarize(n = n())
print(paste("The number of records with grade 4 toxicities is", n_record))
n_subject <- df_adae_grade_four |> group_by(SUBJID) |> summarize() |> summarize(n = n())
print(paste("The number of people having grade 4 toxicity record is", n_subject))
df_adsl_partial <- dl$adsl |> select(SUBJID, ATRT, AGE, SEX)
# Check for the uniqueness of SUBJID
n_unique <- df_adsl_partial |> summarize(n_unique = n_distinct(SUBJID))
n_subject <- df_adsl_partial |> summarize(n = n())
if (n_unique == n_subject) {print("There is no duplicate in SUBJID.")} else {print("There are duplicates in SUBJID.")}
# Merge the adae and adsl data source
df_adae_grade_four_adsl <- df_adae_grade_four |> select(SUBJID) |> group_by(SUBJID) |> summarize() |> left_join(df_adsl_partial, by = c("SUBJID"))
df_adae_grade_four_adsl
library(ggplot2)
# Histogram of ages
p1 = ggplot(df_adae_grade_four_adsl, aes(x = AGE)) + geom_histogram() + theme_bw() + labs(x = "Age", y = "Count") + ggtitle("Histogram of Age of subjects with grade 4 toxicity")
p1
avg_age <- dl$adsl |> select(AGE) |> summarize(avg_age = mean(AGE))
print(paste("The average age of subjects in the trials is", avg_age))
# Histogram of gender
p2 = ggplot(df_adae_grade_four_adsl, aes(x = SEX)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Gender", y = "Count") + ggtitle("Histogram of gender of subjects with grade 4 toxicity")
p2
# Histogram of ATRT
p3 = ggplot(df_adae_grade_four_adsl, aes(x = ATRT)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Treatment", y = "Count") + ggtitle("Histogram of treatment of subjects with grade 4 toxicity")
p3
# Drop those rows with NULL or unable-to-evaluate on RSREP and negative value on VISITDY
df_adrsp_partial <- dl$adrsp |> select(SUBJID, RSRESP, VISITDY) |> filter(RSRESP != "" & RSRESP != "Unable to evaluate" & VISITDY >= 0)
# Define order of the response
custom_order <- c("Progressive disease", "Stable disease", "Partial response", "Complete response")
df_adrsp_partial <- df_adrsp_partial |> mutate(rsresp_ordered = factor(RSRESP, levels = custom_order, ordered = TRUE))
df_best_rsp <- df_adrsp_partial |> group_by(SUBJID) |> summarize(best_rsresp = max(rsresp_ordered))
df_arm <- dl$adsl |> select(SUBJID, ATRT) |> rename(arm = ATRT)
df_best_rsp <- df_best_rsp |> left_join(df_arm |> select(SUBJID, arm), by = "SUBJID")
p4 <- ggplot(df_best_rsp, aes(x = best_rsresp, fill = arm)) + geom_histogram(stat = "count", position = "stack") + theme_bw() + labs(x = "Best Response", y = "Count", fill = "Treatment") + ggtitle("Histogram of Best Response facted by Treatment") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p4
# Note that if a patient has recorded values of "Complete Response" or "Partial Response", he or she will have best_response = Complete Response or Partial Response
df_best_rsp <- df_best_rsp |> mutate(is_positive = (best_rsresp >= "Partial response"))
df_best_rsp_positive_count <- df_best_rsp |> group_by(arm) |> summarize(n_positive = sum(is_positive))
df_best_rsp_positive_count
n_confirmed <- dl$adrsp |> select(SUBJID, RSRESP, RSCONFYN) |> filter(RSRESP == "Complete response" & RSCONFYN == "Y") |> summarize(n = n())
n_confirmed
df_biomark_kras <- dl$biomark |> select(SUBJID, BMMTNM1, BMMTR1, BMMTNM2, BMMTR2, BMMTNM3, BMMTR3, BMMTNM15, BMMTR15)
df_biomark_kras <- df_biomark_kras |> mutate(is_mutant = (BMMTR1 == "Mutant") | (BMMTR2 == "Mutant") | (BMMTR3 == "Mutant") | (BMMTR15 == "Mutant"))
df_biomark_kras <- df_biomark_kras |> mutate(n_wild = (BMMTR1 == "Wild-type") + (BMMTR2 == "Wild-type") + (BMMTR3 == "Wild-type") + (BMMTR15 == "Wild-type"))
df_biomark_kras <- df_biomark_kras |> mutate(n_unknown = (BMMTR1 == "Unknown" | BMMTR1 == "" | BMMTR1 == "Failure") + (BMMTR2 == "Unknown" | BMMTR2 == "" | BMMTR2 == "Failure") + (BMMTR3 == "Unknown" | BMMTR3 == "" | BMMTR3 == "Failure") + (BMMTR15 == "Unknown" | BMMTR15 == "" | BMMTR15 == "Failure"))
df_biomark_kras$type = NA
df_biomark_kras[df_biomark_kras$is_mutant, "type"] = "Mutant"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild > df_biomark_kras$n_unknown), "type"] = "Wild-type"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild <= df_biomark_kras$n_unknown), "type"] = "Unknown"
p5 <- ggplot(df_biomark_kras, aes(x = type)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Type", y = "Count") + ggtitle("Count of each KRAS type over all patients")
p5
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "FOLFOX alone") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 3, byrow = FALSE)
fisher.test(fisher_tbl)
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Panitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
marker_death_table
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Panitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
marker_death_table
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
marker_death_table
library(dplyr)
library(haven)
library(purrr)
setwd("~/Documents/BIS 620/")
trial_path = file.path("2023-09-11/PDS_DSA_20050203")
trial_files = list.files(trial_path, pattern = "*_pds2019.sas7bdat")
dl = map(file.path(trial_path, trial_files), ~ read_sas(.x))
names(dl) = gsub("*_pds2019.sas7bdat", "", trial_files)
df_adae_grade_four <- dl$adae |> as_tibble() |> filter(AESEVCD == 4)
n_record <- df_adae_grade_four |> summarize(n = n())
print(paste("The number of records with grade 4 toxicities is", n_record))
n_subject <- df_adae_grade_four |> group_by(SUBJID) |> summarize() |> summarize(n = n())
print(paste("The number of people having grade 4 toxicity record is", n_subject))
df_adsl_partial <- dl$adsl |> select(SUBJID, ATRT, AGE, SEX)
# Check for the uniqueness of SUBJID
n_unique <- df_adsl_partial |> summarize(n_unique = n_distinct(SUBJID))
n_subject <- df_adsl_partial |> summarize(n = n())
if (n_unique == n_subject) {print("There is no duplicate in SUBJID.")} else {print("There are duplicates in SUBJID.")}
# Merge the adae and adsl data source
df_adae_grade_four_adsl <- df_adae_grade_four |> select(SUBJID) |> group_by(SUBJID) |> summarize() |> left_join(df_adsl_partial, by = c("SUBJID"))
df_adae_grade_four_adsl
library(ggplot2)
# Histogram of ages
p1 = ggplot(df_adae_grade_four_adsl, aes(x = AGE)) + geom_histogram() + theme_bw() + labs(x = "Age", y = "Count") + ggtitle("Histogram of Age of subjects with grade 4 toxicity")
p1
avg_age <- dl$adsl |> select(AGE) |> summarize(avg_age = mean(AGE))
print(paste("The average age of subjects in the trials is", avg_age))
# Histogram of gender
p2 = ggplot(df_adae_grade_four_adsl, aes(x = SEX)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Gender", y = "Count") + ggtitle("Histogram of gender of subjects with grade 4 toxicity")
p2
# Histogram of ATRT
p3 = ggplot(df_adae_grade_four_adsl, aes(x = ATRT)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Treatment", y = "Count") + ggtitle("Histogram of treatment of subjects with grade 4 toxicity")
p3
# Drop those rows with NULL or unable-to-evaluate on RSREP and negative value on VISITDY
df_adrsp_partial <- dl$adrsp |> select(SUBJID, RSRESP, VISITDY) |> filter(RSRESP != "" & RSRESP != "Unable to evaluate" & VISITDY >= 0)
# Define order of the response
custom_order <- c("Progressive disease", "Stable disease", "Partial response", "Complete response")
df_adrsp_partial <- df_adrsp_partial |> mutate(rsresp_ordered = factor(RSRESP, levels = custom_order, ordered = TRUE))
df_best_rsp <- df_adrsp_partial |> group_by(SUBJID) |> summarize(best_rsresp = max(rsresp_ordered))
df_arm <- dl$adsl |> select(SUBJID, ATRT) |> rename(arm = ATRT)
df_best_rsp <- df_best_rsp |> left_join(df_arm |> select(SUBJID, arm), by = "SUBJID")
p4 <- ggplot(df_best_rsp, aes(x = best_rsresp, fill = arm)) + geom_histogram(stat = "count", position = "stack") + theme_bw() + labs(x = "Best Response", y = "Count", fill = "Treatment") + ggtitle("Histogram of Best Response facted by Treatment") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p4
# Note that if a patient has recorded values of "Complete Response" or "Partial Response", he or she will have best_response = Complete Response or Partial Response
df_best_rsp <- df_best_rsp |> mutate(is_positive = (best_rsresp >= "Partial response"))
df_best_rsp_positive_count <- df_best_rsp |> group_by(arm) |> summarize(n_positive = sum(is_positive))
df_best_rsp_positive_count
n_confirmed <- dl$adrsp |> select(SUBJID, RSRESP, RSCONFYN) |> filter(RSRESP == "Complete response" & RSCONFYN == "Y") |> summarize(n = n())
n_confirmed
df_biomark_kras <- dl$biomark |> select(SUBJID, BMMTNM1, BMMTR1, BMMTNM2, BMMTR2, BMMTNM3, BMMTR3, BMMTNM15, BMMTR15)
df_biomark_kras <- df_biomark_kras |> mutate(is_mutant = (BMMTR1 == "Mutant") | (BMMTR2 == "Mutant") | (BMMTR3 == "Mutant") | (BMMTR15 == "Mutant"))
df_biomark_kras <- df_biomark_kras |> mutate(n_wild = (BMMTR1 == "Wild-type") + (BMMTR2 == "Wild-type") + (BMMTR3 == "Wild-type") + (BMMTR15 == "Wild-type"))
df_biomark_kras <- df_biomark_kras |> mutate(n_unknown = (BMMTR1 == "Unknown" | BMMTR1 == "" | BMMTR1 == "Failure") + (BMMTR2 == "Unknown" | BMMTR2 == "" | BMMTR2 == "Failure") + (BMMTR3 == "Unknown" | BMMTR3 == "" | BMMTR3 == "Failure") + (BMMTR15 == "Unknown" | BMMTR15 == "" | BMMTR15 == "Failure"))
df_biomark_kras$type = NA
df_biomark_kras[df_biomark_kras$is_mutant, "type"] = "Mutant"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild > df_biomark_kras$n_unknown), "type"] = "Wild-type"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild <= df_biomark_kras$n_unknown), "type"] = "Unknown"
p5 <- ggplot(df_biomark_kras, aes(x = type)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Type", y = "Count") + ggtitle("Count of each KRAS type over all patients")
p5
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "FOLFOX alone") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 3, byrow = FALSE)
fisher.test(fisher_tbl)
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
marker_death_table
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Panitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
marker_death_table
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
library(dplyr)
library(haven)
library(purrr)
setwd("~/Documents/BIS 620/")
trial_path = file.path("2023-09-11/PDS_DSA_20050203")
trial_files = list.files(trial_path, pattern = "*_pds2019.sas7bdat")
dl = map(file.path(trial_path, trial_files), ~ read_sas(.x))
names(dl) = gsub("*_pds2019.sas7bdat", "", trial_files)
df_adae_grade_four <- dl$adae |> as_tibble() |> filter(AESEVCD == 4)
n_record <- df_adae_grade_four |> summarize(n = n())
print(paste("The number of records with grade 4 toxicities is", n_record))
n_subject <- df_adae_grade_four |> group_by(SUBJID) |> summarize() |> summarize(n = n())
print(paste("The number of people having grade 4 toxicity record is", n_subject))
df_adsl_partial <- dl$adsl |> select(SUBJID, ATRT, AGE, SEX)
# Check for the uniqueness of SUBJID
n_unique <- df_adsl_partial |> summarize(n_unique = n_distinct(SUBJID))
n_subject <- df_adsl_partial |> summarize(n = n())
if (n_unique == n_subject) {print("There is no duplicate in SUBJID.")} else {print("There are duplicates in SUBJID.")}
# Merge the adae and adsl data source
df_adae_grade_four_adsl <- df_adae_grade_four |> select(SUBJID) |> group_by(SUBJID) |> summarize() |> left_join(df_adsl_partial, by = c("SUBJID"))
df_adae_grade_four_adsl
library(ggplot2)
# Histogram of ages
p1 = ggplot(df_adae_grade_four_adsl, aes(x = AGE)) + geom_histogram() + theme_bw() + labs(x = "Age", y = "Count") + ggtitle("Histogram of Age of subjects with grade 4 toxicity")
p1
avg_age <- dl$adsl |> select(AGE) |> summarize(avg_age = mean(AGE))
print(paste("The average age of subjects in the trials is", avg_age))
# Histogram of gender
p2 = ggplot(df_adae_grade_four_adsl, aes(x = SEX)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Gender", y = "Count") + ggtitle("Histogram of gender of subjects with grade 4 toxicity")
p2
# Histogram of ATRT
p3 = ggplot(df_adae_grade_four_adsl, aes(x = ATRT)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Treatment", y = "Count") + ggtitle("Histogram of treatment of subjects with grade 4 toxicity")
p3
# Drop those rows with NULL or unable-to-evaluate on RSREP and negative value on VISITDY
df_adrsp_partial <- dl$adrsp |> select(SUBJID, RSRESP, VISITDY) |> filter(RSRESP != "" & RSRESP != "Unable to evaluate" & VISITDY >= 0)
# Define order of the response
custom_order <- c("Progressive disease", "Stable disease", "Partial response", "Complete response")
df_adrsp_partial <- df_adrsp_partial |> mutate(rsresp_ordered = factor(RSRESP, levels = custom_order, ordered = TRUE))
df_best_rsp <- df_adrsp_partial |> group_by(SUBJID) |> summarize(best_rsresp = max(rsresp_ordered))
df_arm <- dl$adsl |> select(SUBJID, ATRT) |> rename(arm = ATRT)
df_best_rsp <- df_best_rsp |> left_join(df_arm |> select(SUBJID, arm), by = "SUBJID")
df_best_rsp |> group_by(best_rsresp, arm) |> summarise(n = n())
p4 <- ggplot(df_best_rsp, aes(x = best_rsresp, fill = arm)) + geom_histogram(stat = "count", position = "stack") + theme_bw() + labs(x = "Best Response", y = "Count", fill = "Treatment") + ggtitle("Histogram of Best Response facted by Treatment") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p4
# Note that if a patient has recorded values of "Complete Response" or "Partial Response", he or she will have best_response = Complete Response or Partial Response
df_best_rsp <- df_best_rsp |> mutate(is_positive = (best_rsresp >= "Partial response"))
df_best_rsp_positive_count <- df_best_rsp |> group_by(arm) |> summarize(n_positive = sum(is_positive))
df_best_rsp_positive_count
n_confirmed <- dl$adrsp |> select(SUBJID, RSRESP, RSCONFYN) |> filter(RSRESP == "Complete response" & RSCONFYN == "Y") |> summarize(n = n())
n_confirmed
df_biomark_kras <- dl$biomark |> select(SUBJID, BMMTNM1, BMMTR1, BMMTNM2, BMMTR2, BMMTNM3, BMMTR3, BMMTNM15, BMMTR15)
df_biomark_kras <- df_biomark_kras |> mutate(is_mutant = (BMMTR1 == "Mutant") | (BMMTR2 == "Mutant") | (BMMTR3 == "Mutant") | (BMMTR15 == "Mutant"))
df_biomark_kras <- df_biomark_kras |> mutate(n_wild = (BMMTR1 == "Wild-type") + (BMMTR2 == "Wild-type") + (BMMTR3 == "Wild-type") + (BMMTR15 == "Wild-type"))
df_biomark_kras <- df_biomark_kras |> mutate(n_unknown = (BMMTR1 == "Unknown" | BMMTR1 == "" | BMMTR1 == "Failure") + (BMMTR2 == "Unknown" | BMMTR2 == "" | BMMTR2 == "Failure") + (BMMTR3 == "Unknown" | BMMTR3 == "" | BMMTR3 == "Failure") + (BMMTR15 == "Unknown" | BMMTR15 == "" | BMMTR15 == "Failure"))
df_biomark_kras$type = NA
df_biomark_kras[df_biomark_kras$is_mutant, "type"] = "Mutant"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild > df_biomark_kras$n_unknown), "type"] = "Wild-type"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild <= df_biomark_kras$n_unknown), "type"] = "Unknown"
df_biomark_kras |> group_by(type) |> summarise(n = n())
p5 <- ggplot(df_biomark_kras, aes(x = type)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Type", y = "Count") + ggtitle("Count of each KRAS type over all patients")
p5
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "FOLFOX alone") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 3, byrow = FALSE)
fisher.test(fisher_tbl)
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
marker_death_table
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Panitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
marker_death_table
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
library(dplyr)
library(haven)
library(purrr)
setwd("~/Documents/BIS 620/")
trial_path = file.path("2023-09-11/PDS_DSA_20050203")
trial_files = list.files(trial_path, pattern = "*_pds2019.sas7bdat")
dl = map(file.path(trial_path, trial_files), ~ read_sas(.x))
names(dl) = gsub("*_pds2019.sas7bdat", "", trial_files)
df_adae_grade_four <- dl$adae |> as_tibble() |> filter(AESEVCD == 4)
n_record <- df_adae_grade_four |> summarize(n = n())
print(paste("The number of records with grade 4 toxicities is", n_record))
n_subject <- df_adae_grade_four |> group_by(SUBJID) |> summarize() |> summarize(n = n())
print(paste("The number of people having grade 4 toxicity record is", n_subject))
df_adsl_partial <- dl$adsl |> select(SUBJID, ATRT, AGE, SEX)
# Check for the uniqueness of SUBJID
n_unique <- df_adsl_partial |> summarize(n_unique = n_distinct(SUBJID))
n_subject <- df_adsl_partial |> summarize(n = n())
if (n_unique == n_subject) {print("There is no duplicate in SUBJID.")} else {print("There are duplicates in SUBJID.")}
# Merge the adae and adsl data source
df_adae_grade_four_adsl <- df_adae_grade_four |> select(SUBJID) |> group_by(SUBJID) |> summarize() |> left_join(df_adsl_partial, by = c("SUBJID"))
df_adae_grade_four_adsl
library(ggplot2)
# Histogram of ages
p1 = ggplot(df_adae_grade_four_adsl, aes(x = AGE)) + geom_histogram() + theme_bw() + labs(x = "Age", y = "Count") + ggtitle("Histogram of Age of subjects with grade 4 toxicity")
p1
avg_age <- dl$adsl |> select(AGE) |> summarize(avg_age = mean(AGE))
print(paste("The average age of subjects in the trials is", avg_age))
# Histogram of gender
p2 = ggplot(df_adae_grade_four_adsl, aes(x = SEX)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Gender", y = "Count") + ggtitle("Histogram of gender of subjects with grade 4 toxicity")
p2
# Histogram of ATRT
p3 = ggplot(df_adae_grade_four_adsl, aes(x = ATRT)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Treatment", y = "Count") + ggtitle("Histogram of treatment of subjects with grade 4 toxicity")
p3
# Drop those rows with NULL or unable-to-evaluate on RSREP and negative value on VISITDY
df_adrsp_partial <- dl$adrsp |> select(SUBJID, RSRESP, VISITDY) |> filter(RSRESP != "" & RSRESP != "Unable to evaluate" & VISITDY >= 0)
# Define order of the response
custom_order <- c("Progressive disease", "Stable disease", "Partial response", "Complete response")
df_adrsp_partial <- df_adrsp_partial |> mutate(rsresp_ordered = factor(RSRESP, levels = custom_order, ordered = TRUE))
df_best_rsp <- df_adrsp_partial |> group_by(SUBJID) |> summarize(best_rsresp = max(rsresp_ordered))
df_arm <- dl$adsl |> select(SUBJID, ATRT) |> rename(arm = ATRT)
df_best_rsp <- df_best_rsp |> left_join(df_arm |> select(SUBJID, arm), by = "SUBJID")
df_best_rsp |> group_by(best_rsresp, arm) |> summarise(n = n())
p4 <- ggplot(df_best_rsp, aes(x = best_rsresp, fill = arm)) + geom_histogram(stat = "count", position = "stack") + theme_bw() + labs(x = "Best Response", y = "Count", fill = "Treatment") + ggtitle("Histogram of Best Response facted by Treatment") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
p4
# Note that if a patient has recorded values of "Complete Response" or "Partial Response", he or she will have best_response = Complete Response or Partial Response
df_best_rsp <- df_best_rsp |> mutate(is_positive = (best_rsresp >= "Partial response"))
df_best_rsp_positive_count <- df_best_rsp |> group_by(arm) |> summarize(n_positive = sum(is_positive))
df_best_rsp_positive_count
n_confirmed <- dl$adrsp |> select(SUBJID, RSRESP, RSCONFYN) |> filter(RSRESP == "Complete response" & RSCONFYN == "Y") |> summarize(n = n())
n_confirmed
df_biomark_kras <- dl$biomark |> select(SUBJID, BMMTNM1, BMMTR1, BMMTNM2, BMMTR2, BMMTNM3, BMMTR3, BMMTNM15, BMMTR15)
df_biomark_kras <- df_biomark_kras |> mutate(is_mutant = (BMMTR1 == "Mutant") | (BMMTR2 == "Mutant") | (BMMTR3 == "Mutant") | (BMMTR15 == "Mutant"))
df_biomark_kras <- df_biomark_kras |> mutate(n_wild = (BMMTR1 == "Wild-type") + (BMMTR2 == "Wild-type") + (BMMTR3 == "Wild-type") + (BMMTR15 == "Wild-type"))
df_biomark_kras <- df_biomark_kras |> mutate(n_unknown = (BMMTR1 == "Unknown" | BMMTR1 == "" | BMMTR1 == "Failure") + (BMMTR2 == "Unknown" | BMMTR2 == "" | BMMTR2 == "Failure") + (BMMTR3 == "Unknown" | BMMTR3 == "" | BMMTR3 == "Failure") + (BMMTR15 == "Unknown" | BMMTR15 == "" | BMMTR15 == "Failure"))
df_biomark_kras$type = NA
df_biomark_kras[df_biomark_kras$is_mutant, "type"] = "Mutant"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild > df_biomark_kras$n_unknown), "type"] = "Wild-type"
df_biomark_kras[!df_biomark_kras$is_mutant & (df_biomark_kras$n_wild <= df_biomark_kras$n_unknown), "type"] = "Unknown"
df_biomark_kras |> group_by(type) |> summarise(n = n())
p5 <- ggplot(df_biomark_kras, aes(x = type)) + geom_histogram(stat = "count") + theme_bw() + labs(x = "Type", y = "Count") + ggtitle("Count of each KRAS type over all patients")
p5
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "FOLFOX alone") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> group_by(type, DTH) |> summarize(n = n())
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 3, byrow = FALSE)
fisher.test(fisher_tbl)
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
marker_death_table
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
df_marker_death <- df_biomark_kras |> select(SUBJID, type) |> left_join(df_arm, by = "SUBJID") |> filter(arm == "Panitumumab + FOLFOX") |> inner_join(dl$adsl |> select(SUBJID, DTH), by = "SUBJID")
marker_death_table <- df_marker_death |> filter(type != "Unknown") |> group_by(type, DTH) |> summarize(n = n())
marker_death_table
fisher_tbl <- matrix(marker_death_table$n, nrow = 2, ncol = 2, byrow = FALSE)
fisher.test(fisher_tbl)
shiny::runApp('Documents/BIS 620/Midterm')
runApp('Documents/BIS 620/Midterm')
library(dplyr)
library(duckdb)
library(dplyr)
library(purrr)
library(DBI)
library(DT)
library(ggplot2)
con = dbConnect(
duckdb(
file.path("..", "ctrialsgovdb", "ctgov.duckdb"),
read_only = TRUE
)
)
dbListTables(con)
tbl(con, "conditions")
tbl(con, "browse_conditions")
tbl(con, "conditions")
tbl(con, "conditions") |> distinct(name)
tbl(con, "conditions") |> distinct(name) |> count()
tbl(con, "conditions") |> distinct(name)
dbListTables(con)
tbl(con, "outcome_analyses")
setwd("~/Documents/BIS 620/bis620.2023")
check()
library(covr)
library(testthat)
check()
?check
??check
load_all()
library(devtools)
check()
??dplyr::na_if
??dplyr::n
??dplyr::context
check()
studies
studies |> left_join(designs, by = "nct_id")
a <- studies |> left_join(designs, by = "nct_id")
a |> select("model_flg")
a |> select(model_flg)
setwd("~/Documents/BIS 620/bis620.2023/data-raw")
designs = readRDS("designs.rds")
designs = designs |>
mutate(model = if_else(is.na(intervention_model), observational_model, intervention_model)) |>
mutate(model_flg = if_else(is.na(intervention_model), if_else(is.na(observational_model), "NA", "Observational Model"), "Intervention Model")) # 0 for na, 1 for observational and 2 for intervention
usethis::use_data(designs, overwrite = TRUE)
library(bis620.2023)
library(lubridate)
library(dplyr)
library(ggplot2)
library(purrr)
library(tidyr)
library(gridExtra)
library(knitr)
library(rmarkdown)
library(maps)
library(utils)
query_tbl <- studies |> left_join(designs, by = "nct_id")
x_axis <- get_distinct(designs, "model_flg")
plot_histogram_uniform_x_axis(query_tbl, "model_flg", x_axis, "Model")
check()
check()
check()
check()
check()
