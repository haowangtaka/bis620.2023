for(j in 1:3) {
Q[i,j] <- pi[j] * P[j,i] / pi[i]
}
}
return(Q)
}
Q0 <- compute_Q(pi_0, P)
Q1 <- compute_Q(pi_0 %*% Q0, P)
Q2 <- compute_Q(pi_0 %*% Q1, P)
print(Q0)
print(Q1)
print(Q2)
View(P)
# Given transition matrix P and initial distribution pi_0
P <- matrix(c(0, 1, 0,
0.2, 0, 0.8,
0.1, 0.3, 0.6), nrow=3, byrow=TRUE)
pi_0 <- c(0.5, 0, 0.5)
# Compute the time-reversed transition matrices Q0, Q1, Q2
compute_Q <- function(pi, P) {
Q <- matrix(0, nrow=3, ncol=3)
for(i in 1:3) {
for(j in 1:3) {
Q[i,j] <- pi[j] * P[j,i] / pi[i]
}
}
return(Q)
}
Q0 <- compute_Q(pi_0, P)
Q1 <- compute_Q(pi_0 %*% Q0, P)
Q2 <- compute_Q(pi_0 %*% Q1, P)
print(Q0)
print(Q1)
print(Q2)
install.packages("rjags")
knitr::opts_chunk$set(echo = TRUE)
library(rjags)
x <- 56  # data
mymodel <- "
model{
x ~ dbin(p, 100)
p ~ dunif(0,1)
}
"
m1 <- jags.model(textConnection(mymodel), data=list(x=x))
cs <- coda.samples(m1, c('p'), 10000)
s <- data.frame(cs[[1]])
hist(s$p, xlim=c(0,1))
install.packages("coda")
install.packages("coda")
install.packages("coda")
knitr::opts_chunk$set(echo = TRUE)
library(rjags)
x <- 56  # data
mymodel <- "
model{
x ~ dbin(p, 100)
p ~ dunif(0,1)
}
"
m1 <- jags.model(textConnection(mymodel), data=list(x=x))
cs <- coda.samples(m1, c('p'), 10000)
s <- data.frame(cs[[1]])
hist(s$p, xlim=c(0,1))
knitr::opts_chunk$set(echo = TRUE)
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
P[i,j] = min(c(pi_0[i]*Q[i,j], pi_0[j]*Q[j,i]))
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowsum(P[i])
}
rowsum(P)
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
P[i,j] = min(c(pi_0[i]*Q[i,j], pi_0[j]*Q[j,i]))
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowsums(P[i])
}
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
P[i,j] = min(c(pi_0[i]*Q[i,j], pi_0[j]*Q[j,i]))
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowSums(P[i])
}
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
P[i,j] = min(c(pi_0[i]*Q[i,j], pi_0[j]*Q[j,i]))
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowSums(P[i, ])
}
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
P[i,j] = min(c(pi_0[i]*Q[i,j], pi_0[j]*Q[j,i]))
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowSums(P)[i]
}
P
c(pi_0[i]*Q[i,j], pi_0[j]*Q[j,i])
min(c(pi_0[i]*Q[i,j], pi_0[j]*Q[j,i]))
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
P[i,j] = min(c(1, (pi_0[i]*Q[i,j])/(pi_0[j]*Q[j,i])))
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] == 0
}
P[i,j] = min(c(1, (pi_0[i]*Q[i,j])/(pi_0[j]*Q[j,i])))
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] == 0
}
P[i,j] = Q[i,j] * min(c(1, (pi_0[i]*Q[i,j])/(pi_0[j]*Q[j,i])))
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] == 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[i]*Q[i,j])/(pi_0[j]*Q[j,i])))
}
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] == 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
}
for (i in 1:5){
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] == 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] == 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] = 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] = 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
pi_0 %*% P
1/15
2/15
3/15
4/15
5/15
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] = 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 %*% P
pi_0 %*% P
pi_0
x = sample(1:5, 1, prob = pi_0)
path1[1] = x
n = 100000
path1 = rep(0, n)
x = sample(1:5, 1, prob = pi_0)
path1[1] = x
for(i in 2:n){
x = sample(1:5, 1, prob = P[x,])
path1[i] = x
}
table(path1)/n
d <- read.csv("http://www.stat.yale.edu/~jtc5/238/data/cost-of-the-muse.csv")
View(d)
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[i,j] == 0){
P[i,j] = 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[i,j] == 0){
P[i,j] = 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 %*% P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[j,i] == 0){
P[i,j] = 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(0,1/3,1/3,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[i,j] == 0){
P[i,j] = 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0
pi_0 %*% P
pi_0 = c(1/15, 2/15, 3/15, 4/15, 5/15)
Q = rbind(c(0,1/3,1/3,1/3,0), c(1/3,0,1/3,1/3,0), c(1/3,1/3,0,1/3,0), c(1/4, 1/4, 1/4, 0,1/4),c(0,0,0,1,0))
P = matrix(0, nrow = 5, ncol = 5)
for (i in 1:5){
for (j in 1:5){
if (i == j){
P[i,j] = 0
}
else{
if (Q[i,j] == 0){
P[i,j] = 0
}
else{
P[i,j] = Q[i,j] * min(c(1, (pi_0[j]*Q[j,i])/(pi_0[i]*Q[i,j])))
}
}
}
P[i,i] = 1 - rowSums(P)[i]
}
P
pi_0
pi_0 %*% P
pi_0 %*% P
pi_0 %*% P == pi_0
pi_0 %*% P
setwd("~/Desktop/Software System/Code/bis620.2023")
setwd("~/Desktop/Software System/Code/bis620.2023")
library(devtools)
library(usethis)
library(testthat)
library(covr)
library(pkgdown)
document()
devtools::build_readme()
build_site_github_pages()
pkgdown::build_site()
setwd("~/Desktop/Software System/Code/bis620.2023")
devtools::build_readme()
document()
devtools::build_readme()
document()
status
document()
test()
devtools::build_readme()
setwd("~/Desktop/Software System/Code/bis620.2023")
devtools::build_readme()
devtools::build_readme()
document()
devtools::build_readme()
document()
test()
library(pkgdown)
build_site_github_pages()
pkgdown::build_site()
document()
document()
pkgdown::build_site()
